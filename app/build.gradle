apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

def Properties versionProps = new Properties()

android {

    compileSdkVersion 33
    def versionPropsFile = file('version.properties')
    if (versionPropsFile.canRead()) {

        versionProps.load(new FileInputStream(versionPropsFile))

        def runTasks = gradle.startParameter.taskNames

        def versionMajor = versionProps['VERSION_MAJOR'].toInteger()
        def versionMinor = versionProps['VERSION_MINOR'].toInteger()
        def versionPatch = versionProps['VERSION_PATCH'].toInteger()
        // increment build number on every gradle sync
        def versionBuild = versionProps['VERSION_BUILD'].toInteger() + 1
        // versionProps['CACHED_VERSION']
        // Используется для поддержки Instant Run в дебаг режиме. Потому что при инкрементальном обновлении постоянно меняется versionCode
        // в AndroidManifest.xml из-за чего применение изменений становится невозможным без полной установки приложения.
        // Этот костыль берет для дебаг версии versionCode с последней релизной сборки и не меняет его на протяжении всего процесса debug сборок,
        // обновляется на новое, в тот момент, когда происходит релизная сборка проекта


        // only in release build
        if (':app:assembleRelease' in runTasks || 'aR' in runTasks) {
            versionPatch++;
            if (versionPatch >= 9) {
                versionPatch = 0;
                versionMinor++;
            }
            if (versionMinor >= 9) {
                versionMinor = 0;
                versionMajor++;
            }
            // sync if release
            versionProps['CACHED_VERSION'] = versionBuild.toString()
        }

        versionProps['VERSION_MAJOR'] = versionMajor.toString()
        versionProps['VERSION_MINOR'] = versionMinor.toString()
        versionProps['VERSION_PATCH'] = versionPatch.toString()
        versionProps['VERSION_BUILD'] = versionBuild.toString()

        versionProps.store(versionPropsFile.newWriter(), null)

        defaultConfig {
            applicationId "ru.SnowVolf.convertx"
            minSdk 21
            //noinspection ExpiredTargetSdkVersion
            targetSdk 30
            versionCode versionBuild
            versionName "${versionMajor}.${versionMinor}.${versionPatch}"
            multiDexEnabled true
        }
    } else {
        throw new GradleException("Could not read version.properties!")
    }
    buildTypes {
        allprojects {
            minifyEnabled true
            shrinkResources true
            zipAlignEnabled true
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            debuggable false
            jniDebuggable false
            minifyEnabled false
            zipAlignEnabled true
        }
    }
    compileOptions {
        // Flag to enable support for the new language APIs
        //coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '11'
    }

    namespace 'ru.SnowVolf.convertx'
    defaultConfig {
        signingConfig signingConfigs.debug
    }
}
ext {
    materialDialogsVersion = "0.9.4.5"
}
dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation "com.afollestad.material-dialogs:core:${materialDialogsVersion}"
    implementation "com.afollestad.material-dialogs:commons:${materialDialogsVersion}"
    implementation('com.mikepenz:materialdrawer:5.9.2@aar')
            {
                transitive = true
            }
    //debugCompile 'com.squareup.leakcanary:leakcanary-android:1.5'
    implementation 'com.faendir:acra:4.10.0'
    debugImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5'
}
repositories {
    mavenCentral()
}
